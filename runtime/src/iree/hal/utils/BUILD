# Copyright 2021 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

load("//build_tools/bazel:build_defs.oss.bzl", "iree_runtime_cc_library", "iree_runtime_cc_test")
load("//build_tools/bazel:cc_binary_benchmark.bzl", "cc_binary_benchmark")

package(
    default_visibility = ["//visibility:public"],
    features = ["layering_check"],
    licenses = ["notice"],  # Apache 2.0
)

iree_runtime_cc_library(
    name = "buffer_transfer",
    srcs = ["buffer_transfer.c"],
    hdrs = ["buffer_transfer.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//runtime/src/iree/base",
        "//runtime/src/iree/base:tracing",
        "//runtime/src/iree/hal",
    ],
)

iree_runtime_cc_library(
    name = "collective_batch",
    srcs = ["collective_batch.c"],
    hdrs = ["collective_batch.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":resource_set",
        "//runtime/src/iree/base",
        "//runtime/src/iree/base:tracing",
        "//runtime/src/iree/base/internal:arena",
        "//runtime/src/iree/hal",
    ],
)

iree_runtime_cc_library(
    name = "caching_allocator",
    srcs = ["caching_allocator.c"],
    hdrs = ["caching_allocator.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//runtime/src/iree/base",
        "//runtime/src/iree/base:tracing",
        "//runtime/src/iree/base/internal:synchronization",
        "//runtime/src/iree/hal",
    ],
)

iree_runtime_cc_library(
    name = "deferred_command_buffer",
    srcs = ["deferred_command_buffer.c"],
    hdrs = ["deferred_command_buffer.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":resource_set",
        "//runtime/src/iree/base",
        "//runtime/src/iree/base:tracing",
        "//runtime/src/iree/base/internal:arena",
        "//runtime/src/iree/hal",
    ],
)

iree_runtime_cc_library(
    name = "resource_set",
    srcs = ["resource_set.c"],
    hdrs = ["resource_set.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//runtime/src/iree/base",
        "//runtime/src/iree/base:tracing",
        "//runtime/src/iree/base/internal:arena",
        "//runtime/src/iree/hal",
    ],
)

cc_binary_benchmark(
    name = "resource_set_benchmark",
    srcs = ["resource_set_benchmark.c"],
    deps = [
        ":resource_set",
        "//runtime/src/iree/base",
        "//runtime/src/iree/base/internal:prng",
        "//runtime/src/iree/hal",
        "//runtime/src/iree/testing:benchmark",
    ],
)

iree_runtime_cc_test(
    name = "resource_set_test",
    srcs = ["resource_set_test.cc"],
    deps = [
        ":resource_set",
        "//runtime/src/iree/base",
        "//runtime/src/iree/hal",
        "//runtime/src/iree/testing:gtest",
        "//runtime/src/iree/testing:gtest_main",
    ],
)

iree_runtime_cc_library(
    name = "semaphore_base",
    srcs = ["semaphore_base.c"],
    hdrs = ["semaphore_base.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//runtime/src/iree/base",
        "//runtime/src/iree/base:tracing",
        "//runtime/src/iree/base/internal:synchronization",
        "//runtime/src/iree/hal",
    ],
)

iree_runtime_cc_test(
    name = "semaphore_base_test",
    srcs = ["semaphore_base_test.cc"],
    deps = [
        ":semaphore_base",
        "//runtime/src/iree/base",
        "//runtime/src/iree/base/internal:wait_handle",
        "//runtime/src/iree/hal",
        "//runtime/src/iree/testing:gtest",
        "//runtime/src/iree/testing:gtest_main",
    ],
)
