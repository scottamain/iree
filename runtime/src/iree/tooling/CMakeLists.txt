################################################################################
# Autogenerated by build_tools/bazel_to_cmake/bazel_to_cmake.py from           #
# runtime/src/iree/tooling/BUILD                                               #
#                                                                              #
# Use iree_cmake_extra_content from iree/build_defs.oss.bzl to add arbitrary   #
# CMake-only content.                                                          #
#                                                                              #
# To disable autogeneration for this file entirely, delete this header.        #
################################################################################

iree_add_all_subdirs()

iree_cc_library(
  NAME
    buffer_view_matchers
  HDRS
    "buffer_view_matchers.h"
  SRCS
    "buffer_view_matchers.c"
  DEPS
    iree::base
    iree::base::internal
    iree::base::tracing
    iree::hal
  PUBLIC
)

iree_cc_test(
  NAME
    buffer_view_matchers_test
  SRCS
    "buffer_view_matchers_test.cc"
  DEPS
    ::buffer_view_matchers
    iree::base
    iree::base::internal
    iree::base::internal::span
    iree::hal
    iree::testing::gtest
    iree::testing::gtest_main
)

iree_cc_library(
  NAME
    comparison
  HDRS
    "comparison.h"
  SRCS
    "comparison.cc"
  DEPS
    ::buffer_view_matchers
    ::vm_util
    iree::base
    iree::base::internal::flags
    iree::base::internal::span
    iree::base::tracing
    iree::hal
    iree::modules::hal
    iree::vm
  PUBLIC
)

iree_cc_test(
  NAME
    comparison_test
  SRCS
    "comparison_test.cc"
  DEPS
    ::comparison
    ::vm_util
    iree::base
    iree::base::internal::span
    iree::hal
    iree::modules::hal
    iree::testing::gtest
    iree::testing::gtest_main
    iree::vm
)

iree_cc_library(
  NAME
    context_util
  HDRS
    "context_util.h"
  SRCS
    "context_util.c"
  DEPS
    ::device_util
    iree::base
    iree::base::internal::file_io
    iree::base::internal::flags
    iree::base::tracing
    iree::hal
    iree::hal::local::loaders::registration
    iree::modules::hal
    iree::modules::hal::inline
    iree::modules::hal::loader
    iree::modules::vmvx
    iree::vm
    iree::vm::bytecode_module
  PUBLIC
)

iree_cc_library(
  NAME
    device_util
  HDRS
    "device_util.h"
  SRCS
    "device_util.c"
  DEPS
    iree::base
    iree::base::internal::flags
    iree::base::internal::synchronization
    iree::base::tracing
    iree::hal
    iree::hal::drivers
    iree::hal::utils::caching_allocator
  PUBLIC
)

iree_cc_library(
  NAME
    numpy_io
  HDRS
    "numpy_io.h"
  SRCS
    "numpy_io.c"
  DEPS
    iree::base
    iree::base::tracing
    iree::hal
  PUBLIC
)

iree_cc_test(
  NAME
    numpy_io_test
  SRCS
    "numpy_io_test.cc"
  DEPS
    ::device_util
    ::numpy_io
    iree::base::internal::file_io
    iree::testing::gtest
    iree::testing::gtest_main
    iree::tooling::testdata::npy
  LABELS
    "requires-filesystem"
)

iree_cc_library(
  NAME
    vm_util
  HDRS
    "vm_util.h"
  SRCS
    "vm_util.c"
  DEPS
    ::numpy_io
    iree::base
    iree::base::internal::file_io
    iree::base::tracing
    iree::hal
    iree::modules::hal
    iree::vm
    iree::vm::bytecode_module
  PUBLIC
)

iree_cc_test(
  NAME
    vm_util_test
  SRCS
    "vm_util_test.cc"
  DEPS
    ::device_util
    ::vm_util
    iree::base
    iree::base::internal::span
    iree::hal
    iree::modules::hal
    iree::testing::gtest
    iree::testing::gtest_main
    iree::vm
)

# libyaml does not build cleanly on bare-metal systems
if(IREE_ENABLE_THREADING)

iree_cc_library(
  NAME
    trace_replay
  HDRS
    "trace_replay.h"
  SRCS
    "trace_replay.c"
  DEPS
    ::yaml_util
    iree::base
    iree::base::internal
    iree::base::internal::file_io
    iree::base::internal::path
    iree::base::tracing
    iree::hal
    iree::modules::hal
    iree::vm
    iree::vm::bytecode_module
    yaml
  PUBLIC
)

iree_cc_library(
  NAME
    yaml_util
  HDRS
    "yaml_util.h"
  SRCS
    "yaml_util.c"
  DEPS
    iree::base
    yaml
  PUBLIC
)

endif()

### BAZEL_TO_CMAKE_PRESERVES_ALL_CONTENT_BELOW_THIS_LINE ###

# We're co-opting the VMVX module loader option for this as the inline-static
# model is essentially just an inlined loader.
# These tooling targets are intended for iree-* tools and not end-user binaries
# where binary size or dependency constraints matter.
if(IREE_HAL_EXECUTABLE_LOADER_VMVX_MODULE)
  target_link_libraries(iree_tooling_context_util INTERFACE iree_modules_vmvx_vmvx)
endif()
